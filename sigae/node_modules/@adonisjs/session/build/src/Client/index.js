"use strict";
/*
 * @adonisjs/session
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionClient = void 0;
/// <reference path="../../adonis-typings/index.ts" />
const helpers_1 = require("@poppinss/utils/build/helpers");
const Store_1 = require("../Store");
/**
 * SessionClient exposes the API to set session data as a client
 */
class SessionClient extends Store_1.Store {
    constructor(config, driver, cookieClient, values) {
        super(values);
        this.config = config;
        this.driver = driver;
        this.cookieClient = cookieClient;
        /**
         * Each instance of client works on a single session id. Generate
         * multiple client instances for a different session id
         */
        this.sessionId = (0, helpers_1.cuid)();
    }
    /**
     * Commits the session data to the session store and returns
     * the session id and cookie name for it to be accessible
     * by the server
     */
    async commit() {
        await this.driver.write(this.sessionId, this.toJSON());
        this.clear();
        return {
            sessionId: this.cookieClient.sign(this.config.cookieName, this.sessionId),
            cookieName: this.config.cookieName,
        };
    }
    /**
     * Clear the session store
     */
    async forget() {
        this.clear();
        this.driver.destroy(this.sessionId);
    }
}
exports.SessionClient = SessionClient;
